package com.readyad.covid19;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.AdView;
import com.google.android.gms.ads.MobileAds;
import com.google.android.gms.ads.initialization.InitializationStatus;
import com.google.android.gms.ads.initialization.OnInitializationCompleteListener;


import androidx.annotation.NonNull;
import androidx.appcompat.app.ActionBar;
import androidx.appcompat.app.ActionBarDrawerToggle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.os.Handler;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.Volley;

import com.google.android.gms.ads.reward.RewardedVideoAdListener;
import com.google.android.gms.ads.rewarded.RewardedAdLoadCallback;
import com.google.android.material.navigation.NavigationView;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.Objects;

import static com.readyad.covid19.R.string.menuTitle1;

public class todaysActivity extends AppCompatActivity {

    SwipeRefreshLayout swipeRefreshLauout;

    private TextView mTextViewResult;
    private RequestQueue mQueue;

    private AdView mAdView;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_todays);

        MobileAds.initialize(this, new OnInitializationCompleteListener() {
            @Override
            public void onInitializationComplete(InitializationStatus initializationStatus) {
            }
        });

        mAdView = findViewById(R.id.adView);
        AdRequest adRequest = new AdRequest.Builder().build();
        mAdView.loadAd(adRequest);

        swipeRefreshLauout=findViewById(R.id.swipe1);
        swipeRefreshLauout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {


                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        swipeRefreshLauout.setRefreshing(false);
                    }

                },2000);
            }
        });



        mTextViewResult= findViewById(R.id.text_view_result);


        mQueue = Volley.newRequestQueue(this);
        jsonParse();
        checkConnection();
    }


    private void jsonParse() {
        String url = "https://raw.githubusercontent.com/abaraf/JSON/master/last24hours.json";
        JsonObjectRequest request = new JsonObjectRequest(Request.Method.GET, url, null,
                new Response.Listener<JSONObject>() {
                    @Override
                    public void onResponse(JSONObject response) {
                        try {
                            JSONArray jsonArray = response.getJSONArray("todays report");

                            for (int i=0; i<jsonArray.length(); i++){
                                JSONObject todays_report = jsonArray.getJSONObject(i);


                                String dateObject= todays_report.getString("todaydate");
                                String firstObject= todays_report.getString("todaytest");
                                String secondObject= todays_report.getString("todaypositive");
                                String thirdObject= todays_report.getString("todaydeath");
                                String fourthObject= todays_report.getString("todaytotalpositive");
                                String fifthObject= todays_report.getString("todaytotalrecover");
                                String sixthObject= todays_report.getString("todaytotaldeath");


                                mTextViewResult.append(String.valueOf(dateObject)+"\n\n"+String.valueOf(firstObject) +"\n"+String.valueOf(secondObject)+"\n"+String.valueOf(thirdObject)+"\n\n"+String.valueOf(fourthObject)
                                +"\n\n"+String.valueOf(fifthObject)+"\n"+String.valueOf(sixthObject));
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                error.printStackTrace();

            }
        });
        mQueue.add(request);
    }

    public void checkConnection() {
        ConnectivityManager manager = (ConnectivityManager)
                getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo activeNetwork = manager.getActiveNetworkInfo();
        if (null != activeNetwork) {

            if (activeNetwork.getType() == ConnectivityManager.TYPE_WIFI) {

            }
            if (activeNetwork.getType() == ConnectivityManager.TYPE_MOBILE) {

            }
        }
        else {
            Toast.makeText(this, "Network Connection Error", Toast.LENGTH_SHORT).show();
        }
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                finish();
                return true;
        }

        return super.onOptionsItemSelected(item);
    }

    public boolean onCreateOptionsMenu(Menu menu) {
        return true;
    }

}
